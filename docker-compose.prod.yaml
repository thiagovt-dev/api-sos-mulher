services:
  db:
    image: postgis/postgis:16-3.4
    container_name: ${COMPOSE_PROJECT_NAME:-api-sos-mulher}-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-api-sos-mulher}-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redisdata:/data

  app:
    build:
      context: .
      target: production
    image: ${PROD_IMAGE_NAME:-api-sos-mulher}:latest
    container_name: ${COMPOSE_PROJECT_NAME:-api-sos-mulher}-app
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-4000}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    ports:
      - "${PORT:-4000}:4000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  dbdata:
  redisdata:
